#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    client_max_body_size 100m;

    # Redirect any cleartext requests
    server {
        listen       80;
        server_name  tractdb.org;

        # Certbot needs to communicate
        location /.well-known/acme-challenge/ {
            root /var/www/webroot/;
        }

        # API requests could include credentials, reject so they fail during development
        location /api {
            return 400;
        }
        location /couch {
            return 400;
        }

        # We think these are ok to redirect, should not include credentials
        location / {
            return 301   https://tractdb.org$request_uri;
        }
    }

    server {
        listen       443 ssl;
        server_name  tractdb.org;

        ssl_certificate       /etc/letsencrypt/live/tractdb.org/fullchain.pem;
        ssl_certificate_key   /etc/letsencrypt/live/tractdb.org/privkey.pem;
        ssl_dhparam           /etc/ssl/nginx/tractdb.org.dhparams.pem;

        # ssl settings from here:
        # https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://tractdbweb:4000/;
        }

        # Pyramid listens on the /api/ subdirectory
        location /api {
            rewrite /api/(.*) /$1 break;
            proxy_pass http://tractdbpyramid:8080/;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Couch listens on the /couch/ subdirectory
        location /couch {
            rewrite /couch/(.*) /$1 break;
            proxy_pass http://tractdbcouch:5984/;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Listen on the /ttcouch/ subdirectory, pass it through to that container,
        # so we can keep this stable for TummyTrials while iterating on main instance
        location /ttcouch {
            rewrite /ttcouch/(.*) /$1 break;
            proxy_pass http://tt_tractdbcouch:5984/;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen       80;
        listen       443 ssl;
        server_name  dub.washington.edu;

        ssl_certificate       /etc/ssl/nginx/dub.washington.edu.nginx.crt;
        ssl_certificate_key   /etc/ssl/nginx/dub.washington.edu.key;
        ssl_dhparam           /etc/ssl/nginx/dub.washington.edu.dhparams.pem;

        # ssl settings from here:
        # https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://webdub:4000/;
        }

        location = /mailman {
            return 301   http://dub.washington.edu/mailman/listinfo/;
        }
        location = /mailman/ {
            return 301   http://dub.washington.edu/mailman/listinfo/;
        }
        location /mailman/ {
            proxy_pass https://dubber.cs.washington.edu/mailman/;
        }
        location /mailman-icons/ {
            proxy_pass https://dubber.cs.washington.edu/mailman-icons/;
        }

        # We wanted to keep the old paper URLs alive for now, so we copied them into this container
        location /djangosite/media/papers/ {
            rewrite /djangosite/media/(.*) /$1 break;
            proxy_pass http://webduboldpapers:4000/;
        }
    }

    server {
        listen       80;
        listen       443 ssl;
        server_name  dub.uw.edu;

        ssl_certificate       /etc/ssl/nginx/dub.uw.edu.nginx.crt;
        ssl_certificate_key   /etc/ssl/nginx/dub.uw.edu.key;
        ssl_dhparam           /etc/ssl/nginx/dub.uw.edu.dhparams.pem;

        # ssl settings from here:
        # https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://webdub:4000/;
        }

        location = /mailman {
            return 301   http://dub.uw.edu/mailman/listinfo/;
        }
        location = /mailman/ {
            return 301   http://dub.uw.edu/mailman/listinfo/;
        }
        location /mailman/ {
            proxy_pass https://dubber.cs.washington.edu/mailman/;
        }
        location /mailman-icons/ {
            proxy_pass https://dubber.cs.washington.edu/mailman-icons/;
        }

        # We wanted to keep the old paper URLs alive for now, so we copied them into this container
        location /djangosite/media/papers/ {
            rewrite /djangosite/media/(.*) /$1 break;
            proxy_pass http://webduboldpapers:4000/;
        }
    }

    server {
        listen       80;
        server_name  dubstaging.cs.washington.edu;

        location / {
            proxy_pass http://webdubstaging:4000/;

            auth_basic "Restricted";
            auth_basic_user_file /secrets/webdubstaging/.htpasswd;
        }
    }
}
